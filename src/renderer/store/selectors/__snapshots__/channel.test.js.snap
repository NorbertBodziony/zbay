// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Channel selector channel selector 1`] = `
Immutable.ChannelState {
  "spentFilterValue": 38,
  "id": "this-is-a-test-id",
  "message": "Message written in the input",
  "shareableUri": "https://handlers.zbay.app/importchannel=channel-hash",
  "address": "",
  "loader": Immutable.Record {
    "loading": true,
    "message": "Test loading message",
  },
  "members": "0",
  "showInfoMsg": true,
  "isSizeCheckingInProgress": false,
  "messageSizeStatus": null,
}
`;

exports[`Channel selector channelId 1`] = `"this-is-a-test-id"`;

exports[`Channel selector data selector 1`] = `
Immutable.Map {
  "id": "this-is-a-test-id",
  "name": "Channel this-is-a-test-id",
  "private": false,
  "address": "zs1testaddressthis-is-a-test-id",
  "unread": 12,
  "description": "Channel about this-is-a-test-id",
  "advertFee": 0.15,
  "keys": Immutable.Map {
    "ivk": "incoming-viewing-key-this-is-a-test-id",
    "sk": "test-secret-key",
  },
}
`;

exports[`Channel selector loader 1`] = `
Immutable.Record {
  "loading": true,
  "message": "Test loading message",
}
`;

exports[`Channel selector mergeMessages merge messages 1`] = `
Immutable.List [
  Immutable.DisplayableMessage {
    "id": "test-1",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683647,
    "message": "test-1
test-2",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
]
`;

exports[`Channel selector mergeMessages should not merge message with different type 1`] = `
Immutable.List [
  Immutable.DisplayableMessage {
    "id": "test-1",
    "type": 4,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683647,
    "message": "test-1",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-2",
    "type": 4,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683767,
    "message": "test-2",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-3",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683787,
    "message": "test3",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
]
`;

exports[`Channel selector mergeMessages should not merge message with error 1`] = `
Immutable.List [
  Immutable.DisplayableMessage {
    "id": "test-1",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683647,
    "message": "test-1
test-2",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-3",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683787,
    "message": "message with error",
    "spent": "0",
    "fromYou": false,
    "status": "failed",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
]
`;

exports[`Channel selector mergeMessages should not merge messages if time window is exceeded 1`] = `
Immutable.List [
  Immutable.DisplayableMessage {
    "id": "test-1",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683647,
    "message": "test-1",
    "spent": "0",
    "fromYou": false,
    "status": "succes",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-2",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "test123",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1567683987,
    "message": "test-2",
    "spent": "0",
    "fromYou": false,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
]
`;

exports[`Channel selector message selector 1`] = `"Message written in the input"`;

exports[`Channel selector messages selector 1`] = `
Immutable.List [
  Immutable.DisplayableMessage {
    "id": 3,
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551942228,
    "message": "This is a message with id 3",
    "spent": "0.32",
    "fromYou": true,
    "status": "broadcasted",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": "",
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-operation-id-3",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551945828,
    "message": "This is some message test-message-id-3",
    "spent": "0",
    "fromYou": true,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": 2,
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551949428,
    "message": "This is a message with id 2",
    "spent": "0.32",
    "fromYou": true,
    "status": "broadcasted",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": "",
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": 1,
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551956628,
    "message": "This is a message with id 1
This is some message test-pending-message",
    "spent": "0.32",
    "fromYou": true,
    "status": "pending",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": "",
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": "test-operation-id",
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551960228,
    "message": "This is some message test-message-id",
    "spent": "0",
    "fromYou": true,
    "status": "success",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": null,
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
  Immutable.DisplayableMessage {
    "id": 0,
    "type": 1,
    "sender": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "",
    },
    "receiver": Immutable.ExchangeParticipant {
      "replyTo": "",
      "username": "Unnamed",
    },
    "createdAt": 1551963828,
    "message": "This is a message with id 0",
    "spent": "0.32",
    "fromYou": true,
    "status": "broadcasted",
    "error": null,
    "shippingData": null,
    "tag": "",
    "offerOwner": "",
    "isUnregistered": false,
    "publicKey": null,
    "blockTime": 9007199254740991,
  },
]
`;

exports[`Channel selector pendingMessages 1`] = `
Immutable.Map {
  "test-operation-id": Immutable.Operation {
    "opId": "test-operation-id",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id",
        "type": 1,
        "createdAt": 1551960228,
        "message": "This is some message test-message-id",
        "signature": Object {
          "data": Array [
            202,
            15,
            119,
            117,
            178,
            163,
            37,
            253,
            154,
            252,
            231,
            166,
            195,
            137,
            183,
            234,
            71,
            243,
            80,
            122,
            59,
            238,
            222,
            166,
            186,
            69,
            90,
            160,
            160,
            50,
            104,
            190,
            10,
            207,
            36,
            153,
            83,
            108,
            75,
            44,
            43,
            251,
            163,
            248,
            121,
            50,
            116,
            127,
            154,
            101,
            218,
            181,
            222,
            56,
            194,
            169,
            79,
            74,
            219,
            181,
            87,
            23,
            91,
            207,
          ],
          "type": "Buffer",
        },
      },
      "channelId": "this-is-a-test-id",
    },
    "txId": "transaction-id",
    "error": null,
    "status": "success",
  },
  "test-operation-id-3": Immutable.Operation {
    "opId": "test-operation-id-3",
    "type": "pendingMessage",
    "meta": Immutable.Record {
      "message": Immutable.Map {
        "id": "test-message-id-3",
        "type": 1,
        "createdAt": 1551945828,
        "message": "This is some message test-message-id-3",
        "signature": Object {
          "data": Array [
            239,
            184,
            201,
            81,
            172,
            7,
            154,
            148,
            230,
            112,
            241,
            11,
            130,
            31,
            77,
            124,
            79,
            31,
            73,
            239,
            138,
            184,
            107,
            171,
            230,
            45,
            49,
            68,
            107,
            110,
            89,
            216,
            62,
            27,
            132,
            250,
            112,
            76,
            34,
            1,
            215,
            116,
            57,
            162,
            94,
            114,
            218,
            56,
            166,
            48,
            45,
            91,
            225,
            213,
            151,
            95,
            17,
            38,
            129,
            187,
            248,
            87,
            234,
            10,
          ],
          "type": "Buffer",
        },
      },
      "channelId": "this-is-a-test-id",
    },
    "txId": "transaction-id-3",
    "error": null,
    "status": "success",
  },
}
`;

exports[`Channel selector shareableUri 1`] = `"https://handlers.zbay.app/importchannel=channel-hash"`;

exports[`Channel selector should not display messages after user was blocked not display blocked user messages 1`] = `
Immutable.Map {
  "channelModerators": Immutable.List [
    "new-moderator-public-key",
  ],
  "messsagesToRemove": Immutable.List [],
  "blockedUsers": Immutable.List [
    "public-key-user-to-block",
  ],
  "visibleMessages": Immutable.List [
    Immutable.Map {
      "createdAt": 1567683647,
      "id": "test-1-basic",
      "type": 1,
      "message": Immutable.Map {
        "message": "test-msg",
      },
      "publicKey": "public-key-user-to-block",
      "sender": Immutable.Map {
        "replyTo": "",
        "username": "test123",
      },
    },
    Immutable.Map {
      "createdAt": 1567683647,
      "id": "test-2-basic",
      "type": 1,
      "message": Immutable.Map {
        "message": "test-msg",
      },
      "publicKey": "public-key-user-to-block",
      "sender": Immutable.Map {
        "replyTo": "",
        "username": "test123",
      },
    },
  ],
}
`;

exports[`Channel selector should not display messages after user was blocked not display blocked user messages 2`] = `
Immutable.List [
  Immutable.Map {
    "createdAt": 1567683647,
    "id": "test-1-basic",
    "type": 1,
    "message": Immutable.Map {
      "message": "test-msg",
    },
    "publicKey": "public-key-user-to-block",
    "sender": Immutable.Map {
      "replyTo": "",
      "username": "test123",
    },
  },
  Immutable.Map {
    "createdAt": 1567683647,
    "id": "test-2-basic",
    "type": 1,
    "message": Immutable.Map {
      "message": "test-msg",
    },
    "publicKey": "public-key-user-to-block",
    "sender": Immutable.Map {
      "replyTo": "",
      "username": "test123",
    },
  },
]
`;

exports[`Channel selector spent filter value selector 1`] = `38`;

exports[`Channel selector unread selector 1`] = `12`;
